create or replace view vw_dc_matches as
select m.id,
       t.id as tournament_id,
       t.name as tournament_name,
       t.year as tournament_year,
       t.code as tournament_code,
       t.url as tournament_url,
       null as tournament_slug,
       t.location as tournament_location,
       null as tournament_sgl_draw_url,
       null as tournament_sgl_pdf_url,
       t.indoor_outdoor as tournament_indoor_outdoor,
       t.surface as tournament_surface,
       null as tournament_points_rule_id,
       se.id as series_id,
       se.name as series_name,
       sc.id as series_category_id,
       sc.name as series_category_name,
       t.start_dtm as tournament_start_dtm,
       to_date(to_char(t.start_dtm, 'yyyymmdd') || lpad(st.ord, 2, '0'), 'yyyymmddhh24') as tournament_ord_start_dtm,
       t.finish_dtm as tournament_finish_dtm,
       null as tournament_sgl_draw_qty,
       null as tournament_dbl_draw_qty,
       null as tournament_prize_money,
       null as tournament_prize_currency,
       t.country_code as tournament_country_code,
       w.first_name as winner_first_name,
       w.last_name as winner_last_name,
       w.url as winner_url,
       w.code as winner_code,
       w.birth_date as winner_birth_date,
       w.birthplace as winner_birthplace,
       w.turned_pro as winner_turned_pro,
       w.weight as winner_weight,
       w.height as winner_height,
       w.residence as winner_residence,
       w.handedness as winner_handedness,
       w.backhand as winner_backhand,
       w.citizenship as winner_citizenship,
       case
         when w.birth_date is not null and t.start_dtm is not null then trunc(months_between(t.start_dtm, w.birth_date) / 12, 3)
         else null
       end as winner_age,
       l.first_name as loser_first_name,
       l.last_name as loser_last_name,
       l.url as loser_url,
       l.code as loser_code,
       l.birth_date as loser_birth_date,
       l.birthplace as loser_birthplace,
       l.turned_pro as loser_turned_pro,
       l.weight as loser_weight,
       l.height as loser_height,
       l.residence as loser_residence,
       l.handedness as loser_handedness,
       l.backhand as loser_backhand,
       l.citizenship as loser_citizenship,
       case
         when l.birth_date is not null and t.start_dtm is not null then trunc(months_between(t.start_dtm, l.birth_date) / 12, 3)
         else null
       end as loser_age,
       st.name as stadie_name,
       st.ord as stadie_ord,
       st.draw as stadie_draw,
       m.stadie_id,
       m.match_order,
       m.match_ret,
       m.winner_seed,
       m.loser_seed,
       m.score,
       m.winner_sets_won,
       m.loser_sets_won,
       m.winner_games_won,
       m.loser_games_won,
       m.winner_tiebreaks_won,
       m.loser_tiebreaks_won,
       m.stats_url,
       m.match_duration,
       m.win_aces,
       m.win_double_faults,
       m.win_first_serves_in,
       m.win_first_serves_total,
       m.win_first_serve_points_won,
       m.win_first_serve_points_total,
       m.win_second_serve_points_won,
       m.win_second_serve_points_total,
       m.win_break_points_saved,
       m.win_break_points_serve_total,
       m.win_service_points_won,
       m.win_service_points_total,
       m.win_first_serve_return_won,
       m.win_first_serve_return_total,
       m.win_second_serve_return_won,
       m.win_second_serve_return_total,
       m.win_break_points_converted,
       m.win_break_points_return_total,
       m.win_service_games_played,
       m.win_return_games_played,
       m.win_return_points_won,
       m.win_return_points_total,
       m.win_total_points_won,
       m.win_total_points_total,
       m.win_winners,
       m.win_forced_errors,
       m.win_unforced_errors,
       m.win_net_points_won,
       m.win_net_points_total,
       m.win_fastest_first_serves_kmh,
       m.win_average_first_serves_kmh,
       m.win_fastest_second_serve_kmh,
       m.win_average_second_serve_kmh,
       m.los_aces,
       m.los_double_faults,
       m.los_first_serves_in,
       m.los_first_serves_total,
       m.los_first_serve_points_won,
       m.los_first_serve_points_total,
       m.los_second_serve_points_won,
       m.los_second_serve_points_total,
       m.los_break_points_saved,
       m.los_break_points_serve_total,
       m.los_service_points_won,
       m.los_service_points_total,
       m.los_first_serve_return_won,
       m.los_first_serve_return_total,
       m.los_second_serve_return_won,
       m.los_second_serve_return_total,
       m.los_break_points_converted,
       m.los_break_points_return_total,
       m.los_service_games_played,
       m.los_return_games_played,
       m.los_return_points_won,
       m.los_return_points_total,
       m.los_total_points_won,
       m.los_total_points_total,
       m.los_winners,
       m.los_forced_errors,
       m.los_unforced_errors,
       m.los_net_points_won,
       m.los_net_points_total,
       m.los_fastest_first_serves_kmh,
       m.los_average_first_serves_kmh,
       m.los_fastest_second_serve_kmh,
       m.los_average_second_serve_kmh,
       e.win_h2h_qty_3y,
       e.los_h2h_qty_3y,
       e.win_win_qty_3y,
       e.win_los_qty_3y,
       e.los_win_qty_3y,
       e.los_los_qty_3y,
       e.win_avg_tiebreaks_pml_3y,
       e.los_avg_tiebreaks_pml_3y,
       e.win_h2h_qty_3y_surface,
       e.los_h2h_qty_3y_surface,
       e.win_win_qty_3y_surface,
       e.win_los_qty_3y_surface,
       e.los_win_qty_3y_surface,
       e.los_los_qty_3y_surface,
       e.win_avg_tiebreaks_pml_3y_sur,
       e.los_avg_tiebreaks_pml_3y_sur,
       e.win_ace_pml_3y,
       e.win_df_pml_3y,
       e.win_1st_pml_3y,
       e.win_1st_won_pml_3y,
       e.win_2nd_won_pml_3y,
       e.win_bp_saved_pml_3y,
       e.win_srv_won_pml_3y,
       e.win_1st_return_won_pml_3y,
       e.win_2nd_return_won_pml_3y,
       e.win_bp_won_pml_3y,
       e.win_return_won_pml_3y,
       e.win_total_won_pml_3y,
       e.win_ace_pml_3y_surface,
       e.win_df_pml_3y_surface,
       e.win_1st_pml_3y_surface,
       e.win_1st_won_pml_3y_surface,
       e.win_2nd_won_pml_3y_surface,
       e.win_bp_saved_pml_3y_surface,
       e.win_srv_won_pml_3y_surface,
       e.win_1st_return_won_pml_3y_sur,
       e.win_2nd_return_won_pml_3y_sur,
       e.win_bp_won_pml_3y_surface,
       e.win_return_won_pml_3y_surface,
       e.win_total_won_pml_3y_surface,
       e.los_ace_pml_3y,
       e.los_df_pml_3y,
       e.los_1st_pml_3y,
       e.los_1st_won_pml_3y,
       e.los_2nd_won_pml_3y,
       e.los_bp_saved_pml_3y,
       e.los_srv_won_pml_3y,
       e.los_1st_return_won_pml_3y,
       e.los_2nd_return_won_pml_3y,
       e.los_bp_won_pml_3y,
       e.los_return_won_pml_3y,
       e.los_total_won_pml_3y,
       e.los_ace_pml_3y_surface,
       e.los_df_pml_3y_surface,
       e.los_1st_pml_3y_surface,
       e.los_1st_won_pml_3y_surface,
       e.los_2nd_won_pml_3y_surface,
       e.los_bp_saved_pml_3y_surface,
       e.los_srv_won_pml_3y_surface,
       e.los_1st_return_won_pml_3y_sur,
       e.los_2nd_return_won_pml_3y_sur,
       e.los_bp_won_pml_3y_surface,
       e.los_return_won_pml_3y_surface,
       e.los_total_won_pml_3y_surface,
       e.winner_3y_points,
       e.winner_1y_points,
       e.loser_3y_points,
       e.loser_1y_points,
       e.winner_3y_points_surface,
       e.winner_1y_points_surface,
       e.loser_3y_points_surface,
       e.loser_1y_points_surface,
       case
         when match_ret is null then 1000 * round(winner_games_won / (winner_games_won + loser_games_won), 3)
         else null
       end as winner_probability_pml,
       case
         when match_ret is null then 1000 * round(loser_games_won / (winner_games_won + loser_games_won), 3)
         else null
       end as loser_probability_pml,
       case
         when w.citizenship = t.country_code then 1
         else 0
       end as winner_citizenship_num,
       case
         when l.citizenship = t.country_code then 1
         else 0
       end as loser_citizenship_num
from dc_matches m, dc_tournaments t, dc_players d_w, dc_players d_l, stadies st, series_category sc, series se, atp_players w, atp_players l, atp_matches_enriched e
where m.winner_id = d_w.id
  and m.loser_id = d_l.id
  and m.tournament_id = t.id
  and m.stadie_id = st.id
  and t.series_category_id = sc.id
  and sc.series_id = se.id
  and d_w.atp_code = w.code(+)
  and d_l.atp_code = l.code(+)
  and m.id = e.id(+)
/
